DEPTH = 4096;
WIDTH = 32;
ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;
CONTENT
BEGIN

%----------.ktext----------%
00000000 : 23bdffd4;  % 175: funcSyscall: 		addi $sp, $sp, -44   			# Salva $ra e $ts na pilha %
00000001 : afbf0000;  % 176: 			 sw $ra, 0($sp) %
00000002 : afa80004;  % 177: 			 sw $t0, 4($sp) %
00000003 : afa90008;  % 178: 			 sw $t1, 8($sp) %
00000004 : afaa000c;  % 179: 			 sw $t2, 12($sp) %
00000005 : afab0010;  % 180: 			 sw $t3, 16($sp) %
00000006 : afac0014;  % 181: 			 sw $t4, 20($sp) %
00000007 : afad0018;  % 182: 			 sw $t5, 24($sp) %
00000008 : afae001c;  % 183: 			 sw $t6, 28($sp) %
00000009 : afaf0020;  % 184: 			 sw $t7, 32($sp) %
0000000a : afb80024;  % 185: 			 sw $t8, 36($sp) %
0000000b : afb90028;  % 186: 			 sw $t9, 40($sp) %
0000000c : 2008000a;  % 188: 			addi $t0,$zero, 10				# syscall 10 = exit %
0000000d : 11020021;  % 189: 			beq $t0,$v0,goToExit		 %
0000000e : 20080001;  % 191: 			addi $t0, $zero, 1				# sycall 1 = print int %
0000000f : 11020020;  % 192: 			beq $t0, $v0, goToPrintInt %
00000010 : 20080004;  % 194: 			addi $t0, $zero, 4				# syscall 4 = print string %
00000011 : 11020020;  % 195: 			beq $t0, $v0, goToPrintString %
00000012 : 2008000b;  % 197: 			addi $t0, $zero, 11				# syscall 11 = print char %
00000013 : 11020020;  % 198: 			beq $t0, $v0, goToPrintChar %
00000014 : 2008002d;  % 200: 			addi $t0,$zero,45				# syscall 45 = plot %
00000015 : 11020020;  % 201: 			beq $t0,$v0, goToPlot %
00000016 : 2008002e;  % 203: 			addi $t0,$zero,46				# syscall 46 = getplot %
00000017 : 11020020;  % 204: 			beq $t0,$v0, goToGetPlot %
00000018 : 2008000c;  % 206: 			addi $t0, $zero, 12				# syscall 12 = read char %
00000019 : 11020020;  % 207: 			beq $t0, $v0, goToReadChar %
0000001a : 20080005;  % 209: 			addi $t0, $zero, 5				# syscall 5 = read int %
0000001b : 11020020;  % 210: 			beq $t0, $v0, goToReadInt %
0000001c : 20080008;  % 212: 			addi $t0, $zero, 8				# syscall 8 = read string %
0000001d : 11020020;  % 213: 			beq $t0, $v0, goToReadString %
0000001e : 2008002f;  % 215: 			addi $t0, $zero, 47				# syscall 47 = inkey %
0000001f : 11020020;  % 216: 			beq $t0, $v0, goToInKey %
00000020 : 20080030;  % 218: 			addi $t0,$zero, 48				# syscall 48 = CLS		 %
00000021 : 11020020;  % 219: 			beq $t0, $v0, goToCLS %
00000022 : 8fbf0000;  % 221: endSyscall: 		 lw $ra, 0($sp)					# syscall 30 = time     syscall 32 = sleep    syscall 41 = randon %
00000023 : 8fa80004;  % 222: 			 lw $t0, 4($sp) %
00000024 : 8fa90008;  % 223: 			 lw $t1, 8($sp) %
00000025 : 8faa000c;  % 224: 			 lw $t2, 12($sp) %
00000026 : 8fab0010;  % 225: 			 lw $t3, 16($sp) %
00000027 : 8fac0014;  % 226: 			 lw $t4, 20($sp) %
00000028 : 8fad0018;  % 227: 			 lw $t5, 24($sp) %
00000029 : 8fae001c;  % 228: 			 lw $t6, 28($sp) %
0000002a : 8faf0020;  % 229: 			 lw $t7, 32($sp) %
0000002b : 8fb80024;  % 230: 			 lw $t8, 36($sp) %
0000002c : 8fb90028;  % 231: 			 lw $t9, 40($sp) %
0000002d : 23bd002c;  % 232: 			addi $sp, $sp, 44				# avaliam $v0 por hardware %
0000002e : 03e00008;  % 233: 			jr $ra %
0000002f : 0800502f;  % 235: goToExit:  j goToExit		# colocar algo mais criativo aqui! %
00000030 : 0c005044;  % 237: goToPrintInt: jal printInt					# chama printInt %
00000031 : 08005022;  % 238: 		j endSyscall %
00000032 : 0c005077;  % 240: goToPrintString: jal printString			# chama printString %
00000033 : 08005022;  % 241: 		  j endSyscall			 %
00000034 : 0c005095;  % 243: goToPrintChar: jal printChar				#chama printChar %
00000035 : 08005022;  % 244: 		j endSyscall %
00000036 : 0c0050c5;  % 246: goToPlot: jal Plot %
00000037 : 08005022;  % 247: 	    j endSyscall %
00000038 : 0c0050cb;  % 249: goToGetPlot: jal GetPlot %
00000039 : 08005022;  % 250: 		j endSyscall %
0000003a : 0c0050d1;  % 252: goToReadChar: jal readChar			#chama readChar %
0000003b : 08005022;  % 253: 		j endSyscall %
0000003c : 0c005107;  % 255: goToReadInt: jal readInt			#chama readInt %
0000003d : 08005022;  % 256: 		j endSyscall %
0000003e : 0c005141;  % 258: goToReadString: jal readString			#chama readString %
0000003f : 08005022;  % 259: 		j endSyscall %
00000040 : 0c00518a;  % 261: goToInKey: jal inKey			#chama inKey %
00000041 : 08005022;  % 262: 		j endSyscall %
00000042 : 0c0051aa;  % 264: goToCLS: jal CLS			#chama CLS %
00000043 : 08005022;  % 265: 		j endSyscall %
00000044 : 23bdfffc;  % 274: printInt: addi $sp, $sp, -4   				# salva $ra %
00000045 : afbf0000;  % 275: 		sw $ra, 0($sp) %
00000046 : 10800001;  % 277: 		beq $a0, $zero, printZero	 %
00000047 : 0800504d;  % 278: 		j printNotZero						# chama printNotZero %
00000048 : 20840030;  % 280: printZero: addi $a0, $a0, 48				# Imprime 0 %
00000049 : 0c005095;  % 281: 		jal printChar %
0000004a : 8fbf0000;  % 283: 		lw $ra, 0($sp)						#retorna %
0000004b : 23bd0004;  % 284: 		addi $sp, $sp, 4 %
0000004c : 03e00008;  % 285: 		jr $ra %
0000004d : 00044020;  % 287: printNotZero: add $t0, $zero, $a0			# $t0 contem o valor do inteiro a ser impresso %
0000004e : 2009000a;  % 288: 		addi $t1, $zero, 10					# $t1 eh uma constante 10 %
0000004f : 0100c82a;  % 289: 		slt $t9, $t0, $zero					# $t0 < 0 ? %
00000050 : 1320000d;  % 290: 		beq $t9, $zero, PrintIntContinue	# verifica se o valor eh negativo.  %
00000051 : 2004002d;  % 292: 		addi $a0, $zero, 45					# Negativo, imprime um '-' na tela %
00000052 : 23bdfff4;  % 294: 		addi $sp, $sp, -12 %
00000053 : afa80000;  % 295: 		sw $t0, 0($sp)						# salva regs %
00000054 : afa90004;  % 296: 		sw $t1, 4($sp) %
00000055 : afbf0008;  % 297: 		sw $ra, 8($sp) %
00000056 : 0c005095;  % 299: 		jal printChar						# imprime ASCII 45 %
00000057 : 8fbf0008;  % 301: 		lw $ra, 8($sp)						# recupera regs %
00000058 : 8fa90004;  % 302: 		lw $t1, 4($sp) %
00000059 : 8fa80000;  % 303: 		lw $t0, 0($sp) %
0000005a : 23bd000c;  % 304: 		addi $sp, $sp, 12 %
0000005b : 00084022;  % 306: 		sub $t0, $zero, $t0					# Torna $t0 positivo %
0000005c : 20a50008;  % 307: 		addi $a1, $a1, 8					# incrementa a coluna %
0000005d : 00005820;  % 308: 		add $t3, $zero, $zero				# $t3=0 %
0000005e : 11000007;  % 310: PrintIntContinue: beq $t0, $zero, PrintIntPop		# se $t0 é zero, nao há mais digitos para imprimir %
0000005f : 0109001a;  % 312: 		div $t0, $t1					# divide o valor por 10 %
00000060 : 00004012;  % 313: 		mflo $t0						# $t0 contem o valor dividido por 10 %
00000061 : 00005010;  % 314: 		mfhi $t2						# $t2 contem o ultimo digito a ser impresso %
00000062 : 23bdfffc;  % 316: 		addi $sp, $sp, -4 %
00000063 : afaa0000;  % 317: 		sw $t2, 0($sp)					# empilha $t2 %
00000064 : 216b0001;  % 319: 		addi $t3, $t3, 1				# conta quantos elementos (digitos) estão na pilha %
00000065 : 0800505e;  % 320: 		j PrintIntContinue				# volta para ser dividido e empilhado de novo %
00000066 : 1160000d;  % 322: PrintIntPop: beq $t3, $zero, endPrintInt	# ultimo digito endPrintInt %
00000067 : 8fa40000;  % 324: 		lw $a0, 0($sp)					# le valor da pilha e coloca em $a0 %
00000068 : 23bd0004;  % 325: 		addi $sp, $sp, 4 %
00000069 : 20840030;  % 327: 		addi $a0, $a0, 48				# código ASCII do dígito = numero + 48 %
0000006a : 23bdfff8;  % 329: 		addi $sp, $sp, -8				# salva regs %
0000006b : afab0000;  % 330: 		sw $t3, 0($sp) %
0000006c : afbf0004;  % 331: 		sw $ra, 4($sp) %
0000006d : 0c005095;  % 333: 		jal printChar					# imprime digito %
0000006e : 8fbf0004;  % 335: 		lw $ra, 4($sp)					# recupera regs %
0000006f : 8fab0000;  % 336: 		lw $t3, 0($sp) %
00000070 : 23bd0008;  % 337: 		addi $sp, $sp, 8 %
00000071 : 20a50008;  % 339: 		addi $a1, $a1, 8				# incrementa a coluna %
00000072 : 216bffff;  % 340: 		addi $t3, $t3, -1				# decrementa contador %
00000073 : 08005066;  % 341: 		j PrintIntPop					# volta %
00000074 : 8fbf0000;  % 343: endPrintInt: lw $ra, 0($sp)				# recupera $ra %
00000075 : 23bd0004;  % 344: 		addi $sp, $sp, 4 %
00000076 : 03e00008;  % 345: 		jr $ra							# fim printInt %
00000077 : 23bdfffc;  % 356: printString:	addi $sp, $sp, -4			# salva $ra %
00000078 : afbf0000;  % 357: 		sw $ra, 0($sp) %
00000079 : 00044021;  % 359: 		move $t0, $a0					# $t0=endereco da string %
0000007a : 8d040000;  % 361: ForPrintString:	lw $a0, 0($t0)			# le em $a0 o caracter a ser impresso %
0000007b : 0000d021;  % 363: 		move $k0,$zero		# contador 4 bytes %
0000007c : 2b5b0004;  % 364: Loop4bytes:	slti $k1,$k0,4 %
0000007d : 13600012;  % 365: 		beq $k1,$zero, Fim4bytes %
0000007e : 309b00ff;  % 367: 		andi $k1,$a0,0x00FF %
0000007f : 13600012;  % 368: 		beq $k1, $zero, EndForPrintString	# string ASCIIZ termina com NULL %
00000080 : 23bdfff8;  % 370: 		addi $sp, $sp, -8				# salva $t0 %
00000081 : afa80000;  % 371: 		sw $t0, 0($sp) %
00000082 : afa40004;  % 372: 		sw $a0, 4($sp) %
00000083 : 308400ff;  % 373: 		andi $a0,$a0,0x00FF %
00000084 : 0c005095;  % 375: 		jal printChar					# imprime char %
00000085 : 8fa40004;  % 377: 		lw $a0, 4($sp) %
00000086 : 8fa80000;  % 378: 		lw $t0, 0($sp)					# recupera $t0				 %
00000087 : 23bd0008;  % 379: 		addi $sp, $sp, 8 %
00000088 : 20a50008;  % 382: 		addi $a1, $a1, 8				# incrementa a coluna %
00000089 : 28bb0139;  % 383: 		slti $k1,$a1,313   #320-8 %
0000008a : 17600002;  % 384: 		bne $k1,$zero,NaoPulaLinha %
0000008b : 20c60008;  % 385: 		addi $a2,$a2,8					#incrementa a linha %
0000008c : 00002821;  % 386: 		move $a1,$zero %
0000008d : 00042202;  % 388: NaoPulaLinha:	srl $a0,$a0,8		# proximo byte %
0000008e : 235a0001;  % 389: 		addi $k0,$k0,1    #incrementa contador 4 bytes %
0000008f : 0800507c;  % 390: 		j Loop4bytes %
00000090 : 21080004;  % 392: Fim4bytes:	addi $t0, $t0, 4				# Proxima word da memoria %
00000091 : 0800507a;  % 393: 		j ForPrintString				# loop %
00000092 : 8fbf0000;  % 395: EndForPrintString: lw $ra, 0($sp)		# recupera $ra %
00000093 : 23bd0004;  % 396: 		addi $sp, $sp, 4 %
00000094 : 03e00008;  % 397: 		jr $ra							# fim printString %
00000095 : 30edff00;  % 421: 		andi $t5,$a3,0xFF00				# cor fundo %
00000096 : 30ee00ff;  % 422: 		andi $t6,$a3,0x00FF				# cor frente %
00000097 : 000d6a02;  % 423: 		srl $t5,$t5,8 %
00000098 : 00066300;  % 427: 		sll $t4, $a2, 12 %
00000099 : 01856020;  % 428: 		add $t4, $t4, $a1				# t4 = 256(y) + x %
0000009a : 218c0007;  % 429: 		addi $t4, $t4, 7				# t4 = 256(y) + (x+7) %
0000009b : 3c188000;  % 430: 		lui $t8, 0x8000				# Endereco de inicio da memoria VGA %
0000009c : 01986020;  % 431: 		add $t4, $t4, $t8				# t4 = endereco de impressao do ultimo pixel da primeira linha do char %
0000009d : 208affe0;  % 433: 		addi $t2, $a0, -32				# indice do char na memoria %
0000009e : 000a50c0;  % 434: 		sll $t2, $t2, 3					# offset em bytes em relacao ao endereco inicial %
0000009f : 3c010001;  % 436: 		addi $t2,$t2, 0x16000		 %
000000a0 : 34216000;
000000a1 : 01415020;
000000a2 : 8d4b0000;  % 439: 		lw $t3, 0($t2)					# carrega a primeira word do char %
000000a3 : 20080004;  % 441: 		addi $t0, $zero, 4				# i = 4 %
000000a4 : 1100000e;  % 443: forChar1I: beq $t0, $zero, endForChar1I	# if(i == 0) end for i %
000000a5 : 20090008;  % 444: 		addi $t1, $zero, 8				# j = 8 %
000000a6 : 11200009;  % 446: 	forChar1J: beq $t1, $zero, endForChar1J	# if(j == 0) end for j %
000000a7 : 31790001;  % 449: 		andi $t9,$t3,0x0001 %
000000a8 : 000b5842;  % 450: 		srl $t3, $t3, 1				# t3 = t3/2  ??????????????????? %
000000a9 : 13200002;  % 452: 		beq $t9, $zero, printCharPixelbg1 %
000000aa : ad8e0000;  % 453: 		sw $t6, 0($t4)		#imprime pixel com cor de frente %
000000ab : 080050ad;  % 454: 		j endCharPixel1	 %
000000ac : ad8d0000;  % 455: printCharPixelbg1:	sw $t5, 0($t4)  #imprime pixel com cor de fundo %
000000ad : 2129ffff;  % 456: endCharPixel1:  addi $t1, $t1, -1				# j-- %
000000ae : 218cffff;  % 457: 		addi $t4, $t4, -1				# t4 aponta um pixel para a esquerda %
000000af : 080050a6;  % 458: 		j forChar1J %
000000b0 : 2108ffff;  % 460: endForChar1J:  addi $t0, $t0, -1				# i-- %
000000b1 : 218c1008;  % 462: 		addi $t4,$t4,4104   # 2**12 + 8 %
000000b2 : 080050a4;  % 463: 		j forChar1I %
000000b3 : 8d4b0004;  % 465: endForChar1I: lw $t3, 4($t2)					# carrega a segunda word do char %
000000b4 : 20080004;  % 467: 		addi $t0, $zero, 4				# i = 4 %
000000b5 : 1100000e;  % 469: forChar2I:	 beq $t0, $zero, endForChar2I	# if(i == 0) end for i %
000000b6 : 20090008;  % 470: 		addi $t1, $zero, 8				# j = 8 %
000000b7 : 11200009;  % 472: 	forChar2J: beq $t1, $zero, endForChar2J	# if(j == 0) end for j %
000000b8 : 31790001;  % 475: 			andi $t9,$t3,0x0001 %
000000b9 : 000b5842;  % 476: 			srl $t3, $t3, 1					# t3 = t3/2 %
000000ba : 13200002;  % 478: 			beq $t9, $zero, printCharPixelbg2 %
000000bb : ad8e0000;  % 479: 			sw $t6, 0($t4) %
000000bc : 080050be;  % 480: 			j endCharPixel2 %
000000bd : ad8d0000;  % 482: printCharPixelbg2: sw $t5, 0($t4) %
000000be : 2129ffff;  % 484:  endCharPixel2:	addi $t1, $t1, -1				# j-- %
000000bf : 218cffff;  % 485: 		addi $t4, $t4, -1				# t4 aponta um pixel para a esquerda %
000000c0 : 080050b7;  % 486: 		j forChar2J %
000000c1 : 2108ffff;  % 488: 	endForChar2J:	addi $t0, $t0, -1				# i-- %
000000c2 : 218c1008;  % 490: 			addi $t4,$t4,4104 %
000000c3 : 080050b5;  % 491: 		j forChar2I %
000000c4 : 03e00008;  % 493: endForChar2I: jr $ra %
000000c5 : 00052b00;  % 504: Plot:   sll $a1,$a1,12 %
000000c6 : 00852020;  % 505: 	add $a0,$a0,$a1 %
000000c7 : 3c058000;  % 506: 	lui $a1, 0x8000 %
000000c8 : 00852025;  % 507: 	or $a0,$a0,$a1 %
000000c9 : ac860000;  % 508: 	sw $a2,0($a0) %
000000ca : 03e00008;  % 509: 	jr $ra %
000000cb : 00052b00;  % 519: GetPlot:sll $a1,$a1,12 %
000000cc : 00852020;  % 520: 	add $a0,$a0,$a1 %
000000cd : 3c058000;  % 521: 	lui $a1,0x8000 %
000000ce : 00852025;  % 522: 	or $a0,$a0,$a1 %
000000cf : 8c860000;  % 523: 	lw $a2,0($a0) %
000000d0 : 03e00008;  % 524: 	jr $ra %
000000d1 : 00004020;  % 535: 	add $t0, $zero, $zero %
000000d2 : 00004820;  % 536: 	add $t1, $zero, $zero %
000000d3 : 3c081000;  % 540: 	lui $t0, 0x1000		 %
000000d4 : 35080008;  % 541: 	ori $t0, $t0, 0x0008 %
000000d5 : 00084080;  % 542: 	sll $t0, $t0, 2 %
000000d6 : 3c091000;  % 545: 	lui $t1, 0x1000		 %
000000d7 : 35290009;  % 546: 	ori $t1, $t1, 0x0009 %
000000d8 : 00094880;  % 547: 	sll $t1, $t1, 2 %
000000d9 : 200f0012;  % 550: 	addi $t7, $zero, 0x12 #carrega o shift %
000000da : 201800f0;  % 551: 	addi $t8, $zero, 0xF0 #carrega o F0 %
000000db : 0000c820;  % 552: 	add $t9, $zero, $zero #shif precionado %
000000dc : 8d0e0000;  % 554: 	lw $t6, 0($t0) %
000000dd : 8d0a0000;  % 556: 	lw $t2, 0($t0) %
000000de : 114e0001;  % 557: 	beq $t2, $t6, atualizaBufferChar # testa se o buffer foi modificado %
000000df : 080050e2;  % 558: 	j modificado %
000000e0 : 01407020;  % 561: 	add $t6, $t2, $zero %
000000e1 : 080050dd;  % 562: 	j loopReadChar %
000000e2 : 314c00ff;  % 565: 	andi $t4, $t2, 0xFF %
000000e3 : 200d0012;  % 566: 	addi $t5, $zero, 0x12 %
000000e4 : 118d001e;  % 567: 	beq $t4, $t5, shiftindahouse %
000000e5 : 314c00ff;  % 570: 	andi $t4, $t2, 0xFF %
000000e6 : 1198fff9;  % 571: 	beq $t4, $t8, atualizaBufferChar %
000000e7 : 314cff00;  % 574: 	andi $t4, $t2, 0xFF00 %
000000e8 : 3c010000;  % 575: 	addi $t5, $zero, 0xF000 %
000000e9 : 3421f000;
000000ea : 00016820;
000000eb : 118d0002;  % 576: 	beq $t4, $t5, continua	#tecla foi solta %
000000ec : 01407020;  % 577: 	add $t6, $t2, $zero %
000000ed : 080050dd;  % 578: 	j loopReadChar %
000000ee : 314c00ff;  % 582: 	andi $t4, $t2, 0xFF #ultima tecla inserida %
000000ef : 118f0013;  % 583: 	beq $t4, $t7, shiftindahouse #se valor é shift %
000000f0 : 200d0001;  % 585: 	addi $t5, $zero, 1 %
000000f1 : 132d0008;  % 586: 	beq $t9, $t5, enderecoShift %
000000f2 : 000c6080;  % 588: 	sll $t4, $t4, 2 #mult 4 %
000000f3 : 3c010001;  % 589: 	addi $t4, $t4, 0x16000 #inicio endereco na memoria %
000000f4 : 34216000;
000000f5 : 01816020;
000000f6 : 218c0318;  % 590: 	addi $t4, $t4, 0x318 #final da string para o printChar sem shit %
000000f7 : 8d8d0000;  % 591: 	lw $t5, 0($t4) %
000000f8 : 11a0ffe7;  % 592: 	beq $t5, $zero, atualizaBufferChar %
000000f9 : 08005105;  % 594: 	j ReadCharEnd %
000000fa : 314c00ff;  % 597: 	andi $t4, $t2, 0xFF #ultima tecla inserida %
000000fb : 000c6080;  % 599: 	sll $t4, $t4, 2 #mult 4 %
000000fc : 3c010001;  % 600: 	addi $t4, $t4, 0x16000 #inicio endereco na memoria %
000000fd : 34216000;
000000fe : 01816020;
000000ff : 218c0530;  % 601: 	addi $t4, $t4, 0x530 #final da string para o printChar com shift %
00000100 : 8d8d0000;  % 602: 	lw $t5, 0($t4) %
00000101 : 11a0ffde;  % 603: 	beq $t5, $zero, atualizaBufferChar %
00000102 : 08005105;  % 605: 	j ReadCharEnd %
00000103 : 20190001;  % 608: 	addi, $t9, $zero, 1 %
00000104 : 080050e0;  % 609: 	j atualizaBufferChar %
00000105 : 000d1020;  % 612: 	add $v0, $zero, $t5 #coloca em v0 o valor em ascii da tecla %
00000106 : 03e00008;  % 614: 	jr $ra %
00000107 : 20020000;  % 624: 	addi $v0, $zero, 0 %
00000108 : 200f0000;  % 625: 	addi $t7, $zero, 0 %
00000109 : 22730001;  % 626: 	addi $s3, $s3, 1 %
0000010a : 3c081000;  % 629: 	lui $t0, 0x1000 %
0000010b : 35080008;  % 630: 	ori $t0, $t0, 0x0008 %
0000010c : 00084080;  % 631: 	sll $t0, $t0, 2 %
0000010d : 3c091000;  % 634: 	lui $t1, 0x1000 %
0000010e : 35290009;  % 635: 	ori $t1, $t1, 0x0009 %
0000010f : 00094880;  % 636: 	sll $t1, $t1, 2 %
00000110 : 8d180000;  % 639: 	lw $t8, 0($t0)	#buffer inicial %
00000111 : 8d190000;  % 640: 	lw $t9, 0 ($t0)	#buffer inicial %
00000112 : 8d0a0000;  % 643: 	lw $t2, 0($t0) %
00000113 : 11580025;  % 644: 	beq $t2, $t8, atualizaBuffer %
00000114 : 8d2b0000;  % 645: 	lw $t3, 0($t1) %
00000115 : 314cff00;  % 649: 	andi $t4, $t2, 0xFF00 %
00000116 : 3c010000;  % 650: 	addi $t5, $zero, 0xF000 %
00000117 : 3421f000;
00000118 : 00016820;
00000119 : 118d0001;  % 651: 	beq $t4, $t5, continuaInt %
0000011a : 08005139;  % 652: 	j atualizaBuffer %
0000011b : 314c00ff;  % 655: 	andi $t4, $t2, 0x000000FF %
0000011c : 200d00f0;  % 658: 	addi $t5, $zero, 0xF0 %
0000011d : 118d001b;  % 659: 	beq $t4, $t5, atualizaBuffer %
0000011e : 200d005a;  % 662: 	addi $t5, $zero, 0x5a %
0000011f : 118d001c;  % 663: 	beq $t4, $t5, fimReadInt1 #pressionado o enter %
00000120 : 000c6080;  % 666: 	sll $t4, $t4, 2 #mult 4 %
00000121 : 3c010001;  % 667: 	addi $t4, $t4, 0x16000 #inicio endereco na memoria %
00000122 : 34216000;
00000123 : 01816020;
00000124 : 218c0318;  % 668: 	addi $t4, $t4, 0x318 #final da string para o printChar %
00000125 : 8d8d0000;  % 669: 	lw $t5, 0($t4) #posicao na memoria %
00000126 : 200e002f;  % 672: 	addi $t6, $zero, 0x2f #inicio dos inteiros - 1 %
00000127 : 01cd602a;  % 673: 	slt $t4, $t6, $t5 %
00000128 : 11800009;  % 674: 	beq $t4, $zero, naoInteiro %
00000129 : 21ce000b;  % 675: 	addi $t6, $t6, 0xB #final dos inteiros %
0000012a : 01ae602a;  % 676: 	slt $t4, $t5, $t6 %
0000012b : 11800006;  % 677: 	beq $t4, $zero, naoInteiro %
0000012c : 31ad000f;  % 680: 	andi $t5, $t5, 0xF #0x31 = 1, so depende dos bits finais %
0000012d : 200c000a;  % 681: 	addi $t4, $zero, 10  %
0000012e : 004c0018;  % 682: 	mult $v0, $t4 #numero vezes 10 (unidade, dezena, centena...) %
0000012f : 00001012;  % 683: 	mflo $v0 %
00000130 : 004d1020;  % 684: 	add $v0, $v0, $t5 %
00000131 : 08005139;  % 686: 	j atualizaBuffer %
00000132 : 200c002d;  % 689: 	addi $t4, $zero, 0x2D %
00000133 : 118d0001;  % 690: 	beq $t4, $t5, negativo %
00000134 : 08005139;  % 692: 	j atualizaBuffer %
00000135 : 0002782a;  % 695: 	slt $t7, $zero, $v0 %
00000136 : 200e0001;  % 696: 	addi $t6, $zero, 1 %
00000137 : 11ee0001;  % 697: 	beq $t7, $t6, atualizaBuffer %
00000138 : 200f0001;  % 698: 	addi $t7, $zero, 1 #1 para negativo %
00000139 : 000ac020;  % 701: 	add $t8, $zero, $t2	#copia o buffer atual para variavel de buffer anterior %
0000013a : 000bc820;  % 702: 	add $t9, $zero, $t3	#copia o buffer atual para variavel de buffer anterior %
0000013b : 08005112;  % 704: 	j loopReadInt %
0000013c : 11e00001;  % 707: 	beq $t7, $zero, fimReadInt2 %
0000013d : 00021022;  % 708: 	sub $v0, $zero, $v0 %
0000013e : 000ac020;  % 711: 	add $t8, $zero, $t2	#copia o buffer atual para variavel de buffer anterior %
0000013f : 000bc820;  % 712: 	add $t9, $zero, $t3	#copia o buffer atual para variavel de buffer anterior %
00000140 : 03e00008;  % 714: 	jr $ra #fim readInt %
00000141 : 00047020;  % 724: 	add $t6, $zero, $a0 	#end inicial string %
00000142 : 20010001;  % 725: 	sub $t7, $a1, 1 	#tamanho maximo menos 1 (guarda para 0x00) %
00000143 : 00a17822;
00000144 : 000f7880;  % 726: 	sll $t7, $t7, 2		#tamanho maximo multiplicado por 4 %
00000145 : 00004820;  % 727: 	add $t1, $zero, $zero	#contador de caracteres (de 4 em 4) %
00000146 : 0000d021;  % 728: 	move $k0,$zero	#contador de 4 %
00000147 : 241e0000;  % 729: 	li $fp,0  #flag de ultimo zero %
00000148 : 3c081000;  % 732: 	lui $t0, 0x1000 %
00000149 : 35080008;  % 733: 	ori $t0, $t0, 0x0008 %
0000014a : 00084080;  % 734: 	sll $t0, $t0, 2 %
0000014b : 8d180000;  % 737: 	lw $t8, 0($t0)		#buffer1 inicial %
0000014c : 11e9003a;  % 740: 	beq $t7, $t1, fimReadString %
0000014d : 8d0a0000;  % 742: 	lw $t2, 0($t0) %
0000014e : 11580035;  % 743: 	beq $t2, $t8, atualizaBufferString %
0000014f : 314cff00;  % 746: 	andi $t4, $t2, 0xFF00 %
00000150 : 3c010000;  % 747: 	addi $t5, $zero, 0xF000 %
00000151 : 3421f000;
00000152 : 00016820;
00000153 : 118d0001;  % 748: 	beq $t4, $t5, continuaString %
00000154 : 08005184;  % 749: 	j atualizaBufferString %
00000155 : 314c00ff;  % 752: 	andi $t4, $t2, 0x00FF %
00000156 : 200d00f0;  % 755: 	addi $t5, $zero, 0xF0 %
00000157 : 118d002c;  % 756: 	beq $t4, $t5, atualizaBufferString %
00000158 : 200d005a;  % 759: 	addi $t5, $zero, 0x5a %
00000159 : 118d002d;  % 760: 	beq $t4, $t5, fimReadString #pressionado o enter %
0000015a : 000c6080;  % 765: 	sll $t4, $t4, 2 	#mult 4 %
0000015b : 3c010001;  % 766: 	addi $t4, $t4, 0x16000 	#inicio endereco na memoria %
0000015c : 34216000;
0000015d : 01816020;
0000015e : 218c0318;  % 767: 	addi $t4, $t4, 0x318 	#final da string para o printChar %
0000015f : 8d8d0000;  % 768: 	lw $t5, 0($t4) 		#posicao na memoria %
00000160 : 11a00023;  % 769: 	beq $t5, $zero, atualizaBufferString %
00000161 : 01c96020;  % 771: VoltaZeroString:	add $t4, $t6, $t1 	#endereco para escrita %
00000162 : 8d990000;  % 776: 	lw $t9, 0($t4)	#le o que tem no endereco %
00000163 : 24060000;  % 778: 	li $a2,0 %
00000164 : 13460016;  % 779: 	beq $k0,$a2,Jzero %
00000165 : 24060001;  % 780: 	li $a2,1 %
00000166 : 1346000e;  % 781: 	beq $k0,$a2,Jum %
00000167 : 24060002;  % 782: 	li $a2,2 %
00000168 : 13460006;  % 783: 	beq $k0,$a2,Jdois %
00000169 : 3c1b00ff;  % 785: Jtres:	lui $k1,0x00FF %
0000016a : 377bffff;  % 786: 	ori $k1,0xFFFF %
0000016b : 000d6e00;  % 787: 	sll $t5,$t5,24 %
0000016c : 241a0000;  % 788: 	li $k0,0 %
0000016d : 24070004;  % 789: 	li $a3,4 %
0000016e : 08005180;  % 790: 	j Jsai %
0000016f : 3c1bff00;  % 791: Jdois:	lui $k1,0xFF00 %
00000170 : 377bffff;  % 792: 	ori $k1,0xFFFF %
00000171 : 000d6c00;  % 793: 	sll $t5,$t5,16 %
00000172 : 241a0003;  % 794: 	li $k0,3 %
00000173 : 24070000;  % 795: 	li $a3,0 %
00000174 : 08005180;  % 796: 	j Jsai %
00000175 : 3c1bffff;  % 797: Jum:	lui $k1,0xFFFF %
00000176 : 377b00ff;  % 798: 	ori $k1,0x00FF %
00000177 : 000d6a00;  % 799: 	sll $t5,$t5,8 %
00000178 : 24070000;  % 800: 	li $a3,0 %
00000179 : 241a0002;  % 801: 	li $k0,2 %
0000017a : 08005180;  % 802: 	j Jsai %
0000017b : 3c1bffff;  % 803: Jzero:	lui $k1,0xFFFF %
0000017c : 377bff00;  % 804: 	ori $k1,0xFF00 %
0000017d : 000d6800;  % 805: 	sll $t5,$t5,0  %
0000017e : 241a0001;  % 806: 	li $k0,1 %
0000017f : 24070000;  % 807: 	li $a3,0 %
00000180 : 033bc824;  % 809: Jsai:	and $t9,$t9,$k1 %
00000181 : 01b96825;  % 810: 	or $t5,$t5,$t9 %
00000182 : ad8d0000;  % 813: PPULA:	sw $t5, 0($t4) 		#guarda char valido %
00000183 : 01274820;  % 815: 	add $t1, $t1, $a3 	#caractere inserido, atualiza contador %
00000184 : 000ac020;  % 818: 	add $t8, $zero, $t2	#copia o buffer atual para variavel de buffer anterior %
00000185 : 13c0ffc6;  % 819: 	beq $fp,$zero,loopReadString %
00000186 : 03e00008;  % 823: 	jr $ra %
00000187 : 241e0001;  % 827: 	li $fp,1 #ultimo %
00000188 : 240d0000;  % 828: 	li $t5,0 #zero %
00000189 : 08005161;  % 829: 	j VoltaZeroString %
0000018a : 20020000;  % 842: 	addi $v0, $zero, 0 %
0000018b : 20030000;  % 843: 	addi $v1, $zero, 0 %
0000018c : 3c081000;  % 846: 	lui $t0, 0x1000 %
0000018d : 35080008;  % 847: 	ori $t0, $t0, 0x0008 %
0000018e : 00084080;  % 848: 	sll $t0, $t0, 2 %
0000018f : 3c091000;  % 851: 	lui $t1, 0x1000 %
00000190 : 35290009;  % 852: 	ori $t1, $t1, 0x0009 %
00000191 : 00094880;  % 853: 	sll $t1, $t1, 2 %
00000192 : 8d180000;  % 856: 	lw $t8, 0($t0)	#buffer inicial %
00000193 : 8d390000;  % 857: 	lw $t9, 0 ($t1)	#buffer inicial %
00000194 : 8d0a0000;  % 860: 	lw $t2, 0($t0) %
00000195 : 8d2b0000;  % 862: 	lw $t3, 0($t1) %
00000196 : 3c0100ff;  % 875: 	andi $t4, $t2, 0xFF0000     #pseudo %
00000197 : 34210000;
00000198 : 01416024;
00000199 : 000c6402;  % 876: 	srl $t4, $t4, 16 %
0000019a : 000c6080;  % 877: 	sll $t4, $t4, 2 #mult 4 %
0000019b : 3c010001;  % 878: 	addi $t4, $t4, 0x16000 #inicio endereco na memoria %
0000019c : 34216000;
0000019d : 01816020;
0000019e : 218c0318;  % 879: 	addi $t4, $t4, 0x318 #final da string para o printChar %
0000019f : 8d8d0000;  % 880: 	lw $t5, 0($t4) #posicao na memoria %
000001a0 : 000d1020;  % 881: 	add $v0, $zero, $t5 %
000001a1 : 314c00ff;  % 883: 	andi $t4, $t2, 0xFF %
000001a2 : 000c6080;  % 884: 	sll $t4, $t4, 2 #mult 4 %
000001a3 : 3c010001;  % 885: 	addi $t4, $t4, 0x16000 #inicio endereco na memoria %
000001a4 : 34216000;
000001a5 : 01816020;
000001a6 : 218c0318;  % 886: 	addi $t4, $t4, 0x318 #final da string para o printChar %
000001a7 : 8d8d0000;  % 887: 	lw $t5, 0($t4) #posicao na memoria %
000001a8 : 000d1820;  % 888: 	add $v1, $zero, $t5 %
000001a9 : 03e00008;  % 890: 	jr $ra %
000001aa : 3c0e8000;  % 904: CLS:	lui $t6,0x8000 %
000001ab : 240a0140;  % 905: 	li $t2,320 %
000001ac : 240c00f0;  % 906: 	li $t4,240 %
000001ad : 24090000;  % 908: 	li $t1,0 %
000001ae : 240b0000;  % 909: 	li $t3,0 %
000001af : 116c000a;  % 910: Fort3: beq $t3,$t4, Endt3 %
000001b0 : 24090000;  % 911: 	li $t1,0 %
000001b1 : 112a0006;  % 912: Fort1: beq $t1,$t2, Endt1 %
000001b2 : 01c97820;  % 913: 	add $t7,$t6,$t1   #soma X %
000001b3 : 000bc300;  % 914: 	sll $t8,$t3,12 %
000001b4 : 01f87820;  % 915: 	add $t7,$t7,$t8	   #soma Y*2^12 %
000001b5 : ade40000;  % 916: 	sw $a0,0($t7) %
000001b6 : 21290001;  % 917: 	addi $t1,$t1,1 %
000001b7 : 080051b1;  % 918: 	j Fort1 %
000001b8 : 216b0001;  % 919: Endt1: addi $t3,$t3,1 %
000001b9 : 080051af;  % 920: 	j Fort3 %
000001ba : 03e00008;  % 921: Endt3: jr $ra %
%----------.kdata----------%
00000800 : 00000000;
00000801 : 00000000;
00000802 : 10101010;
00000803 : 00100010;
00000804 : 00002828;
00000805 : 00000000;
00000806 : 28fe2828;
00000807 : 002828fe;
00000808 : 38503c10;
00000809 : 00107814;
0000080a : 10686400;
0000080b : 00004c2c;
0000080c : 28102818;
0000080d : 003a4446;
0000080e : 00001010;
0000080f : 00000000;
00000810 : 20201008;
00000811 : 00081020;
00000812 : 08081020;
00000813 : 00201008;
00000814 : 38549210;
00000815 : 00109254;
00000816 : fe101010;
00000817 : 00101010;
00000818 : 00000000;
00000819 : 10081818;
0000081a : fe000000;
0000081b : 00000000;
0000081c : 00000000;
0000081d : 18180000;
0000081e : 10080402;
0000081f : 00804020;
00000820 : 54444438;
00000821 : 00384444;
00000822 : 10103010;
00000823 : 00381010;
00000824 : 08044438;
00000825 : 007c2010;
00000826 : 18044438;
00000827 : 00384404;
00000828 : 7c482818;
00000829 : 001c0808;
0000082a : 7840407c;
0000082b : 00384404;
0000082c : 78404438;
0000082d : 00384444;
0000082e : 1008047c;
0000082f : 00202020;
00000830 : 38444438;
00000831 : 00384444;
00000832 : 3c444438;
00000833 : 00384404;
00000834 : 00181800;
00000835 : 00001818;
00000836 : 00181800;
00000837 : 10081818;
00000838 : 20100804;
00000839 : 00040810;
0000083a : 00fe0000;
0000083b : 000000fe;
0000083c : 04081020;
0000083d : 00201008;
0000083e : 08044438;
0000083f : 00100010;
00000840 : 545c4438;
00000841 : 0038405c;
00000842 : 7c444438;
00000843 : 00444444;
00000844 : 78444478;
00000845 : 00784444;
00000846 : 40404438;
00000847 : 00384440;
00000848 : 44444478;
00000849 : 00784444;
0000084a : 7840407c;
0000084b : 007c4040;
0000084c : 7c40407c;
0000084d : 00404040;
0000084e : 5c404438;
0000084f : 00384444;
00000850 : 7c444444;
00000851 : 00444444;
00000852 : 10101038;
00000853 : 00381010;
00000854 : 0808081c;
00000855 : 00304848;
00000856 : 70484444;
00000857 : 00444448;
00000858 : 20202020;
00000859 : 003c2020;
0000085a : 92aac682;
0000085b : 00828282;
0000085c : 54546444;
0000085d : 0044444c;
0000085e : 44444438;
0000085f : 00384444;
00000860 : 38242438;
00000861 : 00202020;
00000862 : 44444438;
00000863 : 0c384444;
00000864 : 78444478;
00000865 : 00444850;
00000866 : 38404438;
00000867 : 00384404;
00000868 : 1010107c;
00000869 : 00101010;
0000086a : 44444444;
0000086b : 00384444;
0000086c : 28444444;
0000086d : 00101028;
0000086e : 54828282;
0000086f : 00282854;
00000870 : 10284444;
00000871 : 00444428;
00000872 : 10284444;
00000873 : 00101010;
00000874 : 1008047c;
00000875 : 007c4020;
00000876 : 20202038;
00000877 : 00382020;
00000878 : 10204080;
00000879 : 00020408;
0000087a : 08080838;
0000087b : 00380808;
0000087c : 00442810;
0000087d : 00000000;
0000087e : 00000000;
0000087f : fe000000;
00000880 : 00000810;
00000881 : 00000000;
00000882 : 3c043800;
00000883 : 003a4444;
00000884 : 24382020;
00000885 : 00582424;
00000886 : 201c0000;
00000887 : 001c2020;
00000888 : 48380808;
00000889 : 00344848;
0000088a : 44380000;
0000088b : 0038407c;
0000088c : 70202418;
0000088d : 00202020;
0000088e : 443a0000;
0000088f : 38043c44;
00000890 : 64584040;
00000891 : 00444444;
00000892 : 10001000;
00000893 : 00101010;
00000894 : 10001000;
00000895 : 60101010;
00000896 : 28242020;
00000897 : 00242830;
00000898 : 08080818;
00000899 : 00080808;
0000089a : 49b60000;
0000089b : 00414149;
0000089c : 24580000;
0000089d : 00242424;
0000089e : 44380000;
0000089f : 00384444;
000008a0 : 24580000;
000008a1 : 20203824;
000008a2 : 48340000;
000008a3 : 08083848;
000008a4 : 302c0000;
000008a5 : 00202020;
000008a6 : 201c0000;
000008a7 : 00380418;
000008a8 : 10381000;
000008a9 : 00101010;
000008aa : 48480000;
000008ab : 00344848;
000008ac : 44440000;
000008ad : 00102844;
000008ae : 82820000;
000008af : 0044aa92;
000008b0 : 28440000;
000008b1 : 00442810;
000008b2 : 24240000;
000008b3 : 38041c24;
000008b4 : 043c0000;
000008b5 : 003c1008;
000008b6 : 2010100c;
000008b7 : 000c1010;
000008b8 : 10101010;
000008b9 : 00101010;
000008ba : 04080830;
000008bb : 00300808;
000008bc : 92600000;
000008bd : 0000000c;
000008be : 243c1818;
000008bf : a55a7e3c;
000008c0 : 99ff5a81;
000008c1 : 99663cff;
000008c2 : 10280000;
000008c3 : 00000028;
000008c4 : 10081020;
000008c5 : 00081020;
000008c6 : 00000000;
000008c7 : 00000000;
000008c8 : 00000000;
000008c9 : 00000000;
000008ca : 00000000;
000008cb : 00000000;
000008cc : 00000000;
000008cd : 00000000;
000008ce : 00000000;
000008cf : 00000000;
000008d0 : 00000000;
000008d1 : 00000000;
000008d2 : 00000000;
000008d3 : 00000000;
000008d4 : 00000000;
000008d5 : 00000000;
000008d6 : 00000000;
000008d7 : 00000000;
000008d8 : 00000000;
000008d9 : 00000000;
000008da : 00000000;
000008db : 00000071;
000008dc : 00000031;
000008dd : 00000000;
000008de : 00000000;
000008df : 00000000;
000008e0 : 0000007a;
000008e1 : 00000073;
000008e2 : 00000061;
000008e3 : 00000077;
000008e4 : 00000032;
000008e5 : 00000000;
000008e6 : 00000000;
000008e7 : 00000063;
000008e8 : 00000078;
000008e9 : 00000064;
000008ea : 00000065;
000008eb : 00000034;
000008ec : 00000033;
000008ed : 00000000;
000008ee : 00000000;
000008ef : 00000000;
000008f0 : 00000076;
000008f1 : 00000066;
000008f2 : 00000074;
000008f3 : 00000072;
000008f4 : 00000035;
000008f5 : 00000000;
000008f6 : 00000000;
000008f7 : 0000006e;
000008f8 : 00000062;
000008f9 : 00000068;
000008fa : 00000067;
000008fb : 00000079;
000008fc : 00000036;
000008fd : 00000000;
000008fe : 00000000;
000008ff : 00000000;
00000900 : 0000006d;
00000901 : 0000006a;
00000902 : 00000075;
00000903 : 00000037;
00000904 : 00000038;
00000905 : 00000000;
00000906 : 00000000;
00000907 : 0000002c;
00000908 : 0000006b;
00000909 : 00000069;
0000090a : 0000006f;
0000090b : 00000030;
0000090c : 00000039;
0000090d : 00000000;
0000090e : 00000000;
0000090f : 0000002e;
00000910 : 0000002f;
00000911 : 0000006c;
00000912 : 0000003b;
00000913 : 00000070;
00000914 : 0000002d;
00000915 : 00000000;
00000916 : 00000000;
00000917 : 00000000;
00000918 : 00000027;
00000919 : 00000000;
0000091a : 00000000;
0000091b : 0000003d;
0000091c : 00000000;
0000091d : 00000000;
0000091e : 00000000;
0000091f : 00000000;
00000920 : 00000000;
00000921 : 0000005b;
00000922 : 00000000;
00000923 : 0000005d;
00000924 : 00000000;
00000925 : 00000000;
00000926 : 00000000;
00000927 : 00000000;
00000928 : 00000000;
00000929 : 00000000;
0000092a : 00000000;
0000092b : 00000000;
0000092c : 00000000;
0000092d : 00000000;
0000092e : 00000000;
0000092f : 00000031;
00000930 : 00000000;
00000931 : 00000034;
00000932 : 00000037;
00000933 : 00000000;
00000934 : 00000000;
00000935 : 00000000;
00000936 : 00000030;
00000937 : 0000002e;
00000938 : 00000032;
00000939 : 00000035;
0000093a : 00000036;
0000093b : 00000038;
0000093c : 00000000;
0000093d : 00000000;
0000093e : 00000000;
0000093f : 0000002b;
00000940 : 00000033;
00000941 : 0000002d;
00000942 : 0000002a;
00000943 : 00000039;
00000944 : 00000000;
00000945 : 00000000;
00000946 : 00000000;
00000947 : 00000000;
00000948 : 00000000;
00000949 : 00000000;
0000094a : 00000000;
0000094b : 00000000;
0000094c : 00000000;
0000094d : 00000000;
0000094e : 00000000;
0000094f : 00000000;
00000950 : 00000000;
00000951 : 00000000;
00000952 : 00000000;
00000953 : 00000000;
00000954 : 00000000;
00000955 : 00000000;
00000956 : 00000000;
00000957 : 00000000;
00000958 : 00000000;
00000959 : 00000000;
0000095a : 00000000;
0000095b : 00000000;
0000095c : 00000000;
0000095d : 00000000;
0000095e : 00000000;
0000095f : 00000000;
00000960 : 00000000;
00000961 : 00000051;
00000962 : 00000021;
00000963 : 00000000;
00000964 : 00000000;
00000965 : 00000000;
00000966 : 0000005a;
00000967 : 00000053;
00000968 : 00000041;
00000969 : 00000057;
0000096a : 00000040;
0000096b : 00000000;
0000096c : 00000000;
0000096d : 00000043;
0000096e : 00000058;
0000096f : 00000044;
00000970 : 00000045;
00000971 : 00000024;
00000972 : 00000023;
00000973 : 00000000;
00000974 : 00000000;
00000975 : 00000000;
00000976 : 00000056;
00000977 : 00000046;
00000978 : 00000054;
00000979 : 00000052;
0000097a : 00000025;
0000097b : 00000000;
0000097c : 00000000;
0000097d : 0000004e;
0000097e : 00000042;
0000097f : 00000048;
00000980 : 00000047;
00000981 : 00000059;
00000982 : 0000005e;
00000983 : 00000000;
00000984 : 00000000;
00000985 : 00000000;
00000986 : 0000004d;
00000987 : 0000004a;
00000988 : 00000055;
00000989 : 00000026;
0000098a : 0000002a;
0000098b : 00000000;
0000098c : 00000000;
0000098d : 0000003c;
0000098e : 0000004b;
0000098f : 00000049;
00000990 : 0000004f;
00000991 : 00000029;
00000992 : 00000028;
00000993 : 00000000;
00000994 : 00000000;
00000995 : 0000003e;
00000996 : 0000003f;
00000997 : 0000004c;
00000998 : 0000003a;
00000999 : 00000050;
0000099a : 0000005f;
0000099b : 00000000;
0000099c : 00000000;
0000099d : 00000000;
0000099e : 00000022;
0000099f : 00000000;
000009a0 : 00000000;
000009a1 : 0000002b;
000009a2 : 00000000;
000009a3 : 00000000;
000009a4 : 00000000;
000009a5 : 00000000;
000009a6 : 00000000;
000009a7 : 0000007b;
000009a8 : 00000000;
000009a9 : 0000007d;
000009aa : 00000000;
000009ab : 00000000;
000009ac : 00000000;
000009ad : 00000000;
000009ae : 00000000;
000009af : 00000000;
000009b0 : 00000000;
000009b1 : 00000000;
000009b2 : 00000000;
000009b3 : 00000000;
000009b4 : 00000000;
000009b5 : 00000000;
000009b6 : 00000000;
000009b7 : 00000000;
000009b8 : 00000000;
000009b9 : 00000000;
000009ba : 00000000;
000009bb : 00000000;
000009bc : 00000000;
000009bd : 00000000;
000009be : 00000000;
000009bf : 00000000;
000009c0 : 00000000;
000009c1 : 00000000;
000009c2 : 00000000;
000009c3 : 00000000;
000009c4 : 00000000;
000009c5 : 00000000;
000009c6 : 00000000;
000009c7 : 00000000;
000009c8 : 00000000;
000009c9 : 00000000;
000009ca : 00000000;
000009cb : 00000000;
000009cc : 00000000;
000009cd : 00000000;
000009ce : 00000000;
000009cf : 00000000;
000009d0 : 00000000;
000009d1 : 00000000;
000009d2 : 00000000;
000009d3 : 00000000;
000009d4 : 00000000;
000009d5 : 00000000;
000009d6 : 00000000;
000009d7 : 00000000;
000009d8 : 00000000;
000009d9 : 00000000;
000009da : 00000000;
000009db : 00000000;
000009dc : 00000000;
000009dd : 00000000;
000009de : 00000000;
000009df : 00000000;
000009e0 : 00000000;
000009e1 : 00000000;
000009e2 : 00000000;
000009e3 : 00000000;
000009e4 : 00000000;
000009e5 : 00000000;
000009e6 : 00000000;
000009e7 : 00000000;
000009e8 : 00000000;
000009e9 : 00000000;
000009ea : 00000000;
000009eb : 00000000;
000009ec : 00000000;
000009ed : 00000000;
000009ee : 00000000;
000009ef : 00000000;
000009f0 : 00000000;
000009f1 : 00000000;
000009f2 : 00000000;
000009f3 : 00000000;
000009f4 : 00000000;
000009f5 : 00000000;
000009f6 : 00000000;
000009f7 : 00000000;
000009f8 : 00000000;
000009f9 : 00000000;
000009fa : 00000000;
000009fb : 00000000;
000009fc : 00000000;
000009fd : 00000000;
000009fe : 00000000;
000009ff : 00000000;
00000a00 : 00000000;
00000a01 : 00000000;
00000a02 : 00000000;
00000a03 : 00000000;
00000a04 : 00000000;
00000a05 : 00000000;
00000a06 : 00000000;
00000a07 : 00000000;
00000a08 : 00000000;
00000a09 : 00000000;
00000a0a : 00000000;
00000a0b : 00000000;
00000a0c : 00000000;
00000a0d : 00000000;
00000a0e : 00000000;
00000a0f : 00000000;
00000a10 : 00000000;
00000a11 : 00000000;
00000a12 : 00000000;
00000a13 : 00000000;
00000a14 : 00000000;
00000a15 : 00000000;
00000a16 : 00000000;
00000a17 : 00000000;
00000a18 : 00000000;
00000a19 : 00000000;
00000a1a : 00000000;
00000a1b : 00000000;
00000a1c : 00000000;
00000a1d : 00000000;
00000a1e : 00000000;
00000a1f : 00000000;
00000a20 : 00000000;
00000a21 : 00000000;
00000a22 : 00000000;
00000a23 : 00000000;
00000a24 : 00000000;
00000a25 : 00000000;
00000a26 : 00000000;
00000a27 : 00000000;
00000a28 : 00000000;
00000a29 : 00000000;
00000a2a : 00000000;
00000a2b : 00000000;
00000a2c : 00000000;
00000a2d : 00000000;
00000a2e : 00000000;
00000a2f : 00000000;
00000a30 : 00000000;
00000a31 : 00000000;
00000a32 : 00000000;
00000a33 : 00000000;
00000a34 : 00000000;
00000a35 : 00000000;
00000a36 : 00000000;
00000a37 : 00000000;
00000a38 : 00000000;
00000a39 : 00000000;
00000a3a : 00000000;
00000a3b : 00000000;
00000a3c : 00000000;
00000a3d : 00000000;
00000a3e : 00000000;
00000a3f : 00000000;
00000a40 : 00000000;
00000a41 : 00000000;
00000a42 : 00000000;
00000a43 : 00000000;
00000a44 : 00000000;
00000a45 : 00000000;
00000a46 : 00000000;
00000a47 : 00000000;
00000a48 : 00000000;
00000a49 : 00000000;
00000a4a : 00000000;
00000a4b : 00000000;
00000a4c : 00000000;
00000a4d : 00000000;
00000a4e : 00000000;
00000a4f : 00000000;
00000a50 : 00000000;
00000a51 : 00000000;
00000a52 : 00000000;
00000a53 : 00000000;
00000a54 : 00000000;
00000a55 : 00000000;
00000a56 : 00000000;
00000a57 : 00000000;
00000a58 : 00000000;
00000a59 : 00000000;
00000a5a : 00000000;
00000a5b : 00000000;
00000a5c : 00000000;
00000a5d : 00000000;
00000a5e : 00000000;
00000a5f : 00000000;
00000a60 : 00000000;
00000a61 : 00000000;
00000a62 : 00000000;
00000a63 : 00000000;
00000a64 : 00000000;
00000a65 : 00000000;
00000a66 : 00000000;
00000a67 : 00000000;
00000a68 : 00000000;
00000a69 : 00000000;
00000a6a : 00000000;
00000a6b : 00000000;
00000a6c : 00000000;
00000a6d : 00000000;
00000a6e : 00000000;
00000a6f : 00000000;
00000a70 : 00000000;
00000a71 : 00000000;
00000a72 : 00000000;
00000a73 : 00000000;
00000a74 : 00000000;
00000a75 : 00000000;
00000a76 : 00000000;
00000a77 : 00000000;
00000a78 : 00000000;
00000a79 : 00000000;
00000a7a : 00000000;
00000a7b : 00000000;
00000a7c : 00000000;
00000a7d : 00000000;
00000a7e : 00000000;
00000a7f : 00000000;
00000a80 : 00000000;
00000a81 : 00000000;
00000a82 : 00000000;
00000a83 : 00000000;
00000a84 : 00000000;
00000a85 : 00000000;
00000a86 : 00000000;
00000a87 : 00000000;
00000a88 : 00000000;
00000a89 : 00000000;
00000a8a : 00000000;
00000a8b : 00000000;
00000a8c : 00000000;
00000a8d : 00000000;
00000a8e : 00000000;
00000a8f : 00000000;
00000a90 : 00000000;
00000a91 : 00000000;
00000a92 : 00000000;
00000a93 : 00000000;
00000a94 : 00000000;
00000a95 : 00000000;
00000a96 : 00000000;
00000a97 : 00000000;
00000a98 : 00000000;
00000a99 : 00000000;
00000a9a : 00000000;
00000a9b : 00000000;
00000a9c : 00000000;
00000a9d : 00000000;
00000a9e : 00000000;
00000a9f : 00000000;
00000aa0 : 00000000;
00000aa1 : 00000000;
00000aa2 : 00000000;
00000aa3 : 00000000;
00000aa4 : 00000000;
00000aa5 : 00000000;
00000aa6 : 00000000;
00000aa7 : 00000000;
00000aa8 : 00000000;
00000aa9 : 00000000;
00000aaa : 00000000;
00000aab : 00000000;
00000aac : 00000000;
00000aad : 00000000;
00000aae : 00000000;
00000aaf : 00000000;
00000ab0 : 00000000;
00000ab1 : 00000000;
00000ab2 : 00000000;
00000ab3 : 00000000;
00000ab4 : 00000000;
00000ab5 : 00000000;
00000ab6 : 00000000;
00000ab7 : 00000000;
00000ab8 : 00000000;
00000ab9 : 00000000;
00000aba : 00000000;
00000abb : 00000000;
00000abc : 00000000;
00000abd : 00000000;
00000abe : 00000000;
00000abf : 00000000;
00000ac0 : 00000000;
00000ac1 : 00000000;
00000ac2 : 00000000;
00000ac3 : 00000000;
00000ac4 : 00000000;
00000ac5 : 00000000;
00000ac6 : 00000000;
00000ac7 : 00000000;
00000ac8 : 00000000;
00000ac9 : 00000000;
00000aca : 00000000;
00000acb : 00000000;
00000acc : 00000000;
00000acd : 00000000;
00000ace : 00000000;
00000acf : 00000000;
00000ad0 : 00000000;
00000ad1 : 00000000;
00000ad2 : 00000000;
00000ad3 : 00000000;
00000ad4 : 00000000;
00000ad5 : 00000000;
00000ad6 : 00000000;
00000ad7 : 00000000;
00000ad8 : 00000000;
00000ad9 : 00000000;
00000ada : 00000000;
00000adb : 00000000;
00000adc : 00000000;
00000add : 00000000;
00000ade : 00000000;
00000adf : 00000000;
00000ae0 : 00000000;
00000ae1 : 00000000;
00000ae2 : 00000000;
00000ae3 : 00000000;
00000ae4 : 00000000;
00000ae5 : 00000000;
00000ae6 : 00000000;
00000ae7 : 00000000;
00000ae8 : 00000000;
00000ae9 : 00000000;
00000aea : 00000000;
00000aeb : 00000000;
00000aec : 00000000;
00000aed : 00000000;
00000aee : 00000000;
00000aef : 00000000;
00000af0 : 00000000;
00000af1 : 00000000;
00000af2 : 00000000;
00000af3 : 00000000;
00000af4 : 00000000;
00000af5 : 00000000;
00000af6 : 00000000;
00000af7 : 00000000;
00000af8 : 00000000;
00000af9 : 00000000;
00000afa : 00000000;
00000afb : 00000000;
00000afc : 00000000;
00000afd : 00000000;
00000afe : 00000000;
00000aff : 00000000;
00000b00 : 00000000;
00000b01 : 00000000;
00000b02 : 00000000;
00000b03 : 00000000;
00000b04 : 00000000;
00000b05 : 00000000;
00000b06 : 00000000;
00000b07 : 00000000;
00000b08 : 00000000;
00000b09 : 00000000;
00000b0a : 00000000;
00000b0b : 00000000;
00000b0c : 00000000;
00000b0d : 00000000;
00000b0e : 00000000;
00000b0f : 00000000;
00000b10 : 00000000;
00000b11 : 00000000;
00000b12 : 00000000;
00000b13 : 00000000;
00000b14 : 00000000;
00000b15 : 00000000;
00000b16 : 00000000;
00000b17 : 00000000;
00000b18 : 00000000;
00000b19 : 00000000;
00000b1a : 00000000;
00000b1b : 00000000;
00000b1c : 00000000;
00000b1d : 00000000;
00000b1e : 00000000;
00000b1f : 00000000;
00000b20 : 00000000;
00000b21 : 00000000;
00000b22 : 00000000;
00000b23 : 00000000;
00000b24 : 00000000;
00000b25 : 00000000;
00000b26 : 00000000;
00000b27 : 00000000;
00000b28 : 00000000;
00000b29 : 00000000;
00000b2a : 00000000;
00000b2b : 00000000;
00000b2c : 00000000;
00000b2d : 00000000;
00000b2e : 00000000;
00000b2f : 00000000;
00000b30 : 00000000;
00000b31 : 00000000;
00000b32 : 00000000;
00000b33 : 00000000;
00000b34 : 00000000;
00000b35 : 00000000;
00000b36 : 00000000;
00000b37 : 00000000;
00000b38 : 00000000;
00000b39 : 00000000;
00000b3a : 00000000;
00000b3b : 00000000;
00000b3c : 00000000;
00000b3d : 00000000;
00000b3e : 00000000;
00000b3f : 00000000;
00000b40 : 00000000;
00000b41 : 00000000;
00000b42 : 00000000;
00000b43 : 00000000;
00000b44 : 00000000;
00000b45 : 00000000;
00000b46 : 00000000;
00000b47 : 00000000;
00000b48 : 00000000;
00000b49 : 00000000;
00000b4a : 00000000;
00000b4b : 00000000;
00000b4c : 00000000;
00000b4d : 00000000;
00000b4e : 00000000;
00000b4f : 00000000;
00000b50 : 00000000;
00000b51 : 00000000;
00000b52 : 00000000;
00000b53 : 00000000;
00000b54 : 00000000;
00000b55 : 00000000;
00000b56 : 00000000;
00000b57 : 00000000;
00000b58 : 00000000;
00000b59 : 00000000;
00000b5a : 00000000;
00000b5b : 00000000;
00000b5c : 00000000;
00000b5d : 00000000;
00000b5e : 00000000;
00000b5f : 00000000;
00000b60 : 00000000;
00000b61 : 00000000;
00000b62 : 00000000;
00000b63 : 00000000;
00000b64 : 00000000;
00000b65 : 00000000;
00000b66 : 00000000;
00000b67 : 00000000;
00000b68 : 00000000;
00000b69 : 00000000;
00000b6a : 00000000;
00000b6b : 00000000;
00000b6c : 00000000;
00000b6d : 00000000;
00000b6e : 00000000;
00000b6f : 00000000;
00000b70 : 00000000;
00000b71 : 00000000;
00000b72 : 00000000;
00000b73 : 00000000;
00000b74 : 00000000;
00000b75 : 00000000;
00000b76 : 00000000;
00000b77 : 00000000;
00000b78 : 00000000;
00000b79 : 00000000;
00000b7a : 00000000;
00000b7b : 00000000;
00000b7c : 00000000;
00000b7d : 00000000;
00000b7e : 00000000;
00000b7f : 00000000;
00000b80 : 00000000;
00000b81 : 00000000;
00000b82 : 00000000;
00000b83 : 00000000;
00000b84 : 00000000;
00000b85 : 00000000;
00000b86 : 00000000;
00000b87 : 00000000;
00000b88 : 00000000;
00000b89 : 00000000;
00000b8a : 00000000;
00000b8b : 00000000;
00000b8c : 00000000;
00000b8d : 00000000;
00000b8e : 00000000;
00000b8f : 00000000;
00000b90 : 00000000;
00000b91 : 00000000;
00000b92 : 00000000;
00000b93 : 00000000;
00000b94 : 00000000;
00000b95 : 00000000;
00000b96 : 00000000;
00000b97 : 00000000;
00000b98 : 00000000;
00000b99 : 00000000;
00000b9a : 00000000;
00000b9b : 00000000;
00000b9c : 00000000;
00000b9d : 00000000;
00000b9e : 00000000;
00000b9f : 00000000;
00000ba0 : 00000000;
00000ba1 : 00000000;
00000ba2 : 00000000;
00000ba3 : 00000000;
00000ba4 : 00000000;
00000ba5 : 00000000;
00000ba6 : 00000000;
00000ba7 : 00000000;
00000ba8 : 00000000;
00000ba9 : 00000000;
00000baa : 00000000;
00000bab : 00000000;
00000bac : 00000000;
00000bad : 00000000;
00000bae : 00000000;
00000baf : 00000000;
00000bb0 : 00000000;
00000bb1 : 00000000;
00000bb2 : 00000000;
00000bb3 : 00000000;
00000bb4 : 00000000;
00000bb5 : 00000000;
00000bb6 : 00000000;
00000bb7 : 00000000;
00000bb8 : 00000000;
00000bb9 : 00000000;
00000bba : 00000000;
00000bbb : 00000000;
00000bbc : 00000000;
00000bbd : 00000000;
00000bbe : 00000000;
00000bbf : 00000000;
00000bc0 : 00000000;
00000bc1 : 00000000;
00000bc2 : 00000000;
00000bc3 : 00000000;
00000bc4 : 00000000;
00000bc5 : 00000000;
00000bc6 : 00000000;
00000bc7 : 00000000;
00000bc8 : 00000000;
00000bc9 : 00000000;
00000bca : 00000000;
00000bcb : 00000000;
00000bcc : 00000000;
00000bcd : 00000000;
00000bce : 00000000;
00000bcf : 00000000;
00000bd0 : 00000000;
00000bd1 : 00000000;
00000bd2 : 00000000;
00000bd3 : 00000000;
00000bd4 : 00000000;
00000bd5 : 00000000;
00000bd6 : 00000000;
00000bd7 : 00000000;
00000bd8 : 00000000;
00000bd9 : 00000000;
00000bda : 00000000;
00000bdb : 00000000;
00000bdc : 00000000;
00000bdd : 00000000;
00000bde : 00000000;
00000bdf : 00000000;
00000be0 : 00000000;
00000be1 : 00000000;
00000be2 : 00000000;
00000be3 : 00000000;
00000be4 : 00000000;
00000be5 : 00000000;
00000be6 : 00000000;
00000be7 : 00000000;
00000be8 : 00000000;
00000be9 : 00000000;
00000bea : 00000000;
00000beb : 00000000;
00000bec : 00000000;
00000bed : 00000000;
00000bee : 00000000;
00000bef : 00000000;
00000bf0 : 00000000;
00000bf1 : 00000000;
00000bf2 : 00000000;
00000bf3 : 00000000;
00000bf4 : 00000000;
00000bf5 : 00000000;
00000bf6 : 00000000;
00000bf7 : 00000000;
00000bf8 : 00000000;
00000bf9 : 00000000;
00000bfa : 00000000;
00000bfb : 00000000;
00000bfc : 00000000;
00000bfd : 00000000;
00000bfe : 00000000;
00000bff : 00000000;
00000c00 : 00000000;
00000c01 : 00000000;
00000c02 : 00000000;
00000c03 : 00000000;
00000c04 : 00000000;
00000c05 : 00000000;
00000c06 : 00000000;
00000c07 : 00000000;
00000c08 : 00000000;
00000c09 : 00000000;
00000c0a : 00000000;
00000c0b : 00000000;
00000c0c : 00000000;
00000c0d : 00000000;
00000c0e : 00000000;
00000c0f : 00000000;
00000c10 : 00000000;
00000c11 : 00000000;
00000c12 : 00000000;
00000c13 : 00000000;
00000c14 : 00000000;
00000c15 : 00000000;
00000c16 : 00000000;
00000c17 : 00000000;
00000c18 : 00000000;
00000c19 : 00000000;
00000c1a : 00000000;
00000c1b : 00000000;
00000c1c : 00000000;
00000c1d : 00000000;
00000c1e : 00000000;
00000c1f : 00000000;
00000c20 : 00000000;
00000c21 : 00000000;
00000c22 : 00000000;
00000c23 : 00000000;
00000c24 : 00000000;
00000c25 : 00000000;
00000c26 : 00000000;
00000c27 : 00000000;
00000c28 : 00000000;
00000c29 : 00000000;
00000c2a : 00000000;
00000c2b : 00000000;
00000c2c : 00000000;
00000c2d : 00000000;
00000c2e : 00000000;
00000c2f : 00000000;
00000c30 : 00000000;
00000c31 : 00000000;
00000c32 : 00000000;
00000c33 : 00000000;
00000c34 : 00000000;
00000c35 : 00000000;
00000c36 : 00000000;
00000c37 : 00000000;
00000c38 : 00000000;
00000c39 : 00000000;
00000c3a : 00000000;
00000c3b : 00000000;
00000c3c : 00000000;
00000c3d : 00000000;
00000c3e : 00000000;
00000c3f : 00000000;
00000c40 : 00000000;
00000c41 : 00000000;
00000c42 : 00000000;
00000c43 : 00000000;
00000c44 : 00000000;
00000c45 : 00000000;
00000c46 : 00000000;
00000c47 : 00000000;
00000c48 : 00000000;
00000c49 : 00000000;
00000c4a : 00000000;
00000c4b : 00000000;
00000c4c : 00000000;
00000c4d : 00000000;
00000c4e : 00000000;
00000c4f : 00000000;
00000c50 : 00000000;
00000c51 : 00000000;
00000c52 : 00000000;
00000c53 : 00000000;
00000c54 : 00000000;
00000c55 : 00000000;
00000c56 : 00000000;
00000c57 : 00000000;
00000c58 : 00000000;
00000c59 : 00000000;
00000c5a : 00000000;
00000c5b : 00000000;
00000c5c : 00000000;
00000c5d : 00000000;
00000c5e : 00000000;
00000c5f : 00000000;
00000c60 : 00000000;
00000c61 : 00000000;
00000c62 : 00000000;
00000c63 : 00000000;
00000c64 : 00000000;
00000c65 : 00000000;
00000c66 : 00000000;
00000c67 : 00000000;
00000c68 : 00000000;
00000c69 : 00000000;
00000c6a : 00000000;
00000c6b : 00000000;
00000c6c : 00000000;
00000c6d : 00000000;
00000c6e : 00000000;
00000c6f : 00000000;
00000c70 : 00000000;
00000c71 : 00000000;
00000c72 : 00000000;
00000c73 : 00000000;
00000c74 : 00000000;
00000c75 : 00000000;
00000c76 : 00000000;
00000c77 : 00000000;
00000c78 : 00000000;
00000c79 : 00000000;
00000c7a : 00000000;
00000c7b : 00000000;
00000c7c : 00000000;
00000c7d : 00000000;
00000c7e : 00000000;
00000c7f : 00000000;
00000c80 : 00000000;
00000c81 : 00000000;
00000c82 : 00000000;
00000c83 : 00000000;
00000c84 : 00000000;
00000c85 : 00000000;
00000c86 : 00000000;
00000c87 : 00000000;
00000c88 : 00000000;
00000c89 : 00000000;
00000c8a : 00000000;
00000c8b : 00000000;
00000c8c : 00000000;
00000c8d : 00000000;
00000c8e : 00000000;
00000c8f : 00000000;
00000c90 : 00000000;
00000c91 : 00000000;
00000c92 : 00000000;
00000c93 : 00000000;
00000c94 : 00000000;
00000c95 : 00000000;
00000c96 : 00000000;
00000c97 : 00000000;
00000c98 : 00000000;
00000c99 : 00000000;
00000c9a : 00000000;
00000c9b : 00000000;
00000c9c : 00000000;
00000c9d : 00000000;
00000c9e : 00000000;
00000c9f : 00000000;
00000ca0 : 00000000;
00000ca1 : 00000000;
00000ca2 : 00000000;
00000ca3 : 00000000;
00000ca4 : 00000000;
00000ca5 : 00000000;
00000ca6 : 00000000;
00000ca7 : 00000000;
00000ca8 : 00000000;
00000ca9 : 00000000;
00000caa : 00000000;
00000cab : 00000000;
00000cac : 00000000;
00000cad : 00000000;
00000cae : 00000000;
00000caf : 00000000;
00000cb0 : 00000000;
00000cb1 : 00000000;
00000cb2 : 00000000;
00000cb3 : 00000000;
00000cb4 : 00000000;
00000cb5 : 00000000;
00000cb6 : 00000000;
00000cb7 : 00000000;
00000cb8 : 00000000;
00000cb9 : 00000000;
00000cba : 00000000;
00000cbb : 00000000;
00000cbc : 00000000;
00000cbd : 00000000;
00000cbe : 00000000;
00000cbf : 00000000;
00000cc0 : 00000000;
00000cc1 : 00000000;
00000cc2 : 00000000;
00000cc3 : 00000000;
00000cc4 : 00000000;
00000cc5 : 00000000;
00000cc6 : 00000000;
00000cc7 : 00000000;
00000cc8 : 00000000;
00000cc9 : 00000000;
00000cca : 00000000;
00000ccb : 00000000;
00000ccc : 00000000;
00000ccd : 00000000;
00000cce : 00000000;
00000ccf : 00000000;
00000cd0 : 00000000;
00000cd1 : 00000000;
00000cd2 : 00000000;
00000cd3 : 00000000;
00000cd4 : 00000000;
00000cd5 : 00000000;
00000cd6 : 00000000;
00000cd7 : 00000000;
00000cd8 : 00000000;
00000cd9 : 00000000;
00000cda : 00000000;
00000cdb : 00000000;
00000cdc : 00000000;
00000cdd : 00000000;
00000cde : 00000000;
00000cdf : 00000000;
00000ce0 : 00000000;
00000ce1 : 00000000;
00000ce2 : 00000000;
00000ce3 : 00000000;
00000ce4 : 00000000;
00000ce5 : 00000000;
00000ce6 : 00000000;
00000ce7 : 00000000;
00000ce8 : 00000000;
00000ce9 : 00000000;
00000cea : 00000000;
00000ceb : 00000000;
00000cec : 00000000;
00000ced : 00000000;
00000cee : 00000000;
00000cef : 00000000;
00000cf0 : 00000000;
00000cf1 : 00000000;
00000cf2 : 00000000;
00000cf3 : 00000000;
00000cf4 : 00000000;
00000cf5 : 00000000;
00000cf6 : 00000000;
00000cf7 : 00000000;
00000cf8 : 00000000;
00000cf9 : 00000000;
00000cfa : 00000000;
00000cfb : 00000000;
00000cfc : 00000000;
00000cfd : 00000000;
00000cfe : 00000000;
00000cff : 00000000;
00000d00 : 00000000;
00000d01 : 00000000;
00000d02 : 00000000;
00000d03 : 00000000;
00000d04 : 00000000;
00000d05 : 00000000;
00000d06 : 00000000;
00000d07 : 00000000;
00000d08 : 00000000;
00000d09 : 00000000;
00000d0a : 00000000;
00000d0b : 00000000;
00000d0c : 00000000;
00000d0d : 00000000;
00000d0e : 00000000;
00000d0f : 00000000;
00000d10 : 00000000;
00000d11 : 00000000;
00000d12 : 00000000;
00000d13 : 00000000;
00000d14 : 00000000;
00000d15 : 00000000;
00000d16 : 00000000;
00000d17 : 00000000;
00000d18 : 00000000;
00000d19 : 00000000;
00000d1a : 00000000;
00000d1b : 00000000;
00000d1c : 00000000;
00000d1d : 00000000;
00000d1e : 00000000;
00000d1f : 00000000;
00000d20 : 00000000;
00000d21 : 00000000;
00000d22 : 00000000;
00000d23 : 00000000;
00000d24 : 00000000;
00000d25 : 00000000;
00000d26 : 00000000;
00000d27 : 00000000;
00000d28 : 00000000;
00000d29 : 00000000;
00000d2a : 00000000;
00000d2b : 00000000;
00000d2c : 00000000;
00000d2d : 00000000;
00000d2e : 00000000;
00000d2f : 00000000;
00000d30 : 00000000;
00000d31 : 00000000;
00000d32 : 00000000;
00000d33 : 00000000;
00000d34 : 00000000;
00000d35 : 00000000;
00000d36 : 00000000;
00000d37 : 00000000;
00000d38 : 00000000;
00000d39 : 00000000;
00000d3a : 00000000;
00000d3b : 00000000;
00000d3c : 00000000;
00000d3d : 00000000;
00000d3e : 00000000;
00000d3f : 00000000;
00000d40 : 00000000;
00000d41 : 00000000;
00000d42 : 00000000;
00000d43 : 00000000;
00000d44 : 00000000;
00000d45 : 00000000;
00000d46 : 00000000;
00000d47 : 00000000;
00000d48 : 00000000;
00000d49 : 00000000;
00000d4a : 00000000;
00000d4b : 00000000;
00000d4c : 00000000;
00000d4d : 00000000;
00000d4e : 00000000;
00000d4f : 00000000;
00000d50 : 00000000;
00000d51 : 00000000;
00000d52 : 00000000;
00000d53 : 00000000;
00000d54 : 00000000;
00000d55 : 00000000;
00000d56 : 00000000;
00000d57 : 00000000;
00000d58 : 00000000;
00000d59 : 00000000;
00000d5a : 00000000;
00000d5b : 00000000;
00000d5c : 00000000;
00000d5d : 00000000;
00000d5e : 00000000;
00000d5f : 00000000;
00000d60 : 00000000;
00000d61 : 00000000;
00000d62 : 00000000;
00000d63 : 00000000;
00000d64 : 00000000;
00000d65 : 00000000;
00000d66 : 00000000;
00000d67 : 00000000;
00000d68 : 00000000;
00000d69 : 00000000;
00000d6a : 00000000;
00000d6b : 00000000;
00000d6c : 00000000;
00000d6d : 00000000;
00000d6e : 00000000;
00000d6f : 00000000;
00000d70 : 00000000;
00000d71 : 00000000;
00000d72 : 00000000;
00000d73 : 00000000;
00000d74 : 00000000;
00000d75 : 00000000;
00000d76 : 00000000;
00000d77 : 00000000;
00000d78 : 00000000;
00000d79 : 00000000;
00000d7a : 00000000;
00000d7b : 00000000;
00000d7c : 00000000;
00000d7d : 00000000;
00000d7e : 00000000;
00000d7f : 00000000;
00000d80 : 00000000;
00000d81 : 00000000;
00000d82 : 00000000;
00000d83 : 00000000;
00000d84 : 00000000;
00000d85 : 00000000;
00000d86 : 00000000;
00000d87 : 00000000;
00000d88 : 00000000;
00000d89 : 00000000;
00000d8a : 00000000;
00000d8b : 00000000;
00000d8c : 00000000;
00000d8d : 00000000;
00000d8e : 00000000;
00000d8f : 00000000;
00000d90 : 00000000;
00000d91 : 00000000;
00000d92 : 00000000;
00000d93 : 00000000;
00000d94 : 00000000;
00000d95 : 00000000;
00000d96 : 00000000;
00000d97 : 00000000;
00000d98 : 00000000;
00000d99 : 00000000;
00000d9a : 00000000;
00000d9b : 00000000;
00000d9c : 00000000;
00000d9d : 00000000;
00000d9e : 00000000;
00000d9f : 00000000;
00000da0 : 00000000;
00000da1 : 00000000;
00000da2 : 00000000;
00000da3 : 00000000;
00000da4 : 00000000;
00000da5 : 00000000;
00000da6 : 00000000;
00000da7 : 00000000;
00000da8 : 00000000;
00000da9 : 00000000;
00000daa : 00000000;
00000dab : 00000000;
00000dac : 00000000;
00000dad : 00000000;
00000dae : 00000000;
00000daf : 00000000;
00000db0 : 00000000;
00000db1 : 00000000;
00000db2 : 00000000;
00000db3 : 00000000;
00000db4 : 00000000;
00000db5 : 00000000;
00000db6 : 00000000;
00000db7 : 00000000;
00000db8 : 00000000;
00000db9 : 00000000;
00000dba : 00000000;
00000dbb : 00000000;
00000dbc : 00000000;
00000dbd : 00000000;
00000dbe : 00000000;
00000dbf : 00000000;
00000dc0 : 00000000;
00000dc1 : 00000000;
00000dc2 : 00000000;
00000dc3 : 00000000;
00000dc4 : 00000000;
00000dc5 : 00000000;
00000dc6 : 00000000;
00000dc7 : 00000000;
00000dc8 : 00000000;
00000dc9 : 00000000;
00000dca : 00000000;
00000dcb : 00000000;
00000dcc : 00000000;
00000dcd : 00000000;
00000dce : 00000000;
00000dcf : 00000000;
00000dd0 : 00000000;
00000dd1 : 00000000;
00000dd2 : 00000000;
00000dd3 : 00000000;
00000dd4 : 00000000;
00000dd5 : 00000000;
00000dd6 : 00000000;
00000dd7 : 00000000;
00000dd8 : 00000000;
00000dd9 : 00000000;
00000dda : 00000000;
00000ddb : 00000000;
00000ddc : 00000000;
00000ddd : 00000000;
00000dde : 00000000;
00000ddf : 00000000;
00000de0 : 00000000;
00000de1 : 00000000;
00000de2 : 00000000;
00000de3 : 00000000;
00000de4 : 00000000;
00000de5 : 00000000;
00000de6 : 00000000;
00000de7 : 00000000;
00000de8 : 00000000;
00000de9 : 00000000;
00000dea : 00000000;
00000deb : 00000000;
00000dec : 00000000;
00000ded : 00000000;
00000dee : 00000000;
00000def : 00000000;
00000df0 : 00000000;
00000df1 : 00000000;
00000df2 : 00000000;
00000df3 : 00000000;
00000df4 : 00000000;
00000df5 : 00000000;
00000df6 : 00000000;
00000df7 : 00000000;
00000df8 : 00000000;
00000df9 : 00000000;
00000dfa : 00000000;
00000dfb : 00000000;
00000dfc : 00000000;
00000dfd : 00000000;
00000dfe : 00000000;
00000dff : 00000000;
00000e00 : 00000000;
00000e01 : 00000000;
00000e02 : 00000000;
00000e03 : 00000000;
00000e04 : 00000000;
00000e05 : 00000000;
00000e06 : 00000000;
00000e07 : 00000000;
00000e08 : 00000000;
00000e09 : 00000000;
00000e0a : 00000000;
00000e0b : 00000000;
00000e0c : 00000000;
00000e0d : 00000000;
00000e0e : 00000000;
00000e0f : 00000000;
00000e10 : 00000000;
00000e11 : 00000000;
00000e12 : 00000000;
00000e13 : 00000000;
00000e14 : 00000000;
00000e15 : 00000000;
00000e16 : 00000000;
00000e17 : 00000000;
00000e18 : 00000000;
00000e19 : 00000000;
00000e1a : 00000000;
00000e1b : 00000000;
00000e1c : 00000000;
00000e1d : 00000000;
00000e1e : 00000000;
00000e1f : 00000000;
00000e20 : 00000000;
00000e21 : 00000000;
00000e22 : 00000000;
00000e23 : 00000000;
00000e24 : 00000000;
00000e25 : 00000000;
00000e26 : 00000000;
00000e27 : 00000000;
00000e28 : 00000000;
00000e29 : 00000000;
00000e2a : 00000000;
00000e2b : 00000000;
00000e2c : 00000000;
00000e2d : 00000000;
00000e2e : 00000000;
00000e2f : 00000000;
00000e30 : 00000000;
00000e31 : 00000000;
00000e32 : 00000000;
00000e33 : 00000000;
00000e34 : 00000000;
00000e35 : 00000000;
00000e36 : 00000000;
00000e37 : 00000000;
00000e38 : 00000000;
00000e39 : 00000000;
00000e3a : 00000000;
00000e3b : 00000000;
00000e3c : 00000000;
00000e3d : 00000000;
00000e3e : 00000000;
00000e3f : 00000000;
00000e40 : 00000000;
00000e41 : 00000000;
00000e42 : 00000000;
00000e43 : 00000000;
00000e44 : 00000000;
00000e45 : 00000000;
00000e46 : 00000000;
00000e47 : 00000000;
00000e48 : 00000000;
00000e49 : 00000000;
00000e4a : 00000000;
00000e4b : 00000000;
00000e4c : 00000000;
00000e4d : 00000000;
00000e4e : 00000000;
00000e4f : 00000000;
00000e50 : 00000000;
00000e51 : 00000000;
00000e52 : 00000000;
00000e53 : 00000000;
00000e54 : 00000000;
00000e55 : 00000000;
00000e56 : 00000000;
00000e57 : 00000000;
00000e58 : 00000000;
00000e59 : 00000000;
00000e5a : 00000000;
00000e5b : 00000000;
00000e5c : 00000000;
00000e5d : 00000000;
00000e5e : 00000000;
00000e5f : 00000000;
00000e60 : 00000000;
00000e61 : 00000000;
00000e62 : 00000000;
00000e63 : 00000000;
00000e64 : 00000000;
00000e65 : 00000000;
00000e66 : 00000000;
00000e67 : 00000000;
00000e68 : 00000000;
00000e69 : 00000000;
00000e6a : 00000000;
00000e6b : 00000000;
00000e6c : 00000000;
00000e6d : 00000000;
00000e6e : 00000000;
00000e6f : 00000000;
00000e70 : 00000000;
00000e71 : 00000000;
00000e72 : 00000000;
00000e73 : 00000000;
00000e74 : 00000000;
00000e75 : 00000000;
00000e76 : 00000000;
00000e77 : 00000000;
00000e78 : 00000000;
00000e79 : 00000000;
00000e7a : 00000000;
00000e7b : 00000000;
00000e7c : 00000000;
00000e7d : 00000000;
00000e7e : 00000000;
00000e7f : 00000000;
00000e80 : 00000000;
00000e81 : 00000000;
00000e82 : 00000000;
00000e83 : 00000000;
00000e84 : 00000000;
00000e85 : 00000000;
00000e86 : 00000000;
00000e87 : 00000000;
00000e88 : 00000000;
00000e89 : 00000000;
00000e8a : 00000000;
00000e8b : 00000000;
00000e8c : 00000000;
00000e8d : 00000000;
00000e8e : 00000000;
00000e8f : 00000000;
00000e90 : 00000000;
00000e91 : 00000000;
00000e92 : 00000000;
00000e93 : 00000000;
00000e94 : 00000000;
00000e95 : 00000000;
00000e96 : 00000000;
00000e97 : 00000000;
00000e98 : 00000000;
00000e99 : 00000000;
00000e9a : 00000000;
00000e9b : 00000000;
00000e9c : 00000000;
00000e9d : 00000000;
00000e9e : 00000000;
00000e9f : 00000000;
00000ea0 : 00000000;
00000ea1 : 00000000;
00000ea2 : 00000000;
00000ea3 : 00000000;
00000ea4 : 00000000;
00000ea5 : 00000000;
00000ea6 : 00000000;
00000ea7 : 00000000;
00000ea8 : 00000000;
00000ea9 : 00000000;
00000eaa : 00000000;
00000eab : 00000000;
00000eac : 00000000;
00000ead : 00000000;
00000eae : 00000000;
00000eaf : 00000000;
00000eb0 : 00000000;
00000eb1 : 00000000;
00000eb2 : 00000000;
00000eb3 : 00000000;
00000eb4 : 00000000;
00000eb5 : 00000000;
00000eb6 : 00000000;
00000eb7 : 00000000;
00000eb8 : 00000000;
00000eb9 : 00000000;
00000eba : 00000000;
00000ebb : 00000000;
00000ebc : 00000000;
00000ebd : 00000000;
00000ebe : 00000000;
00000ebf : 00000000;
00000ec0 : 00000000;
00000ec1 : 00000000;
00000ec2 : 00000000;
00000ec3 : 00000000;
00000ec4 : 00000000;
00000ec5 : 00000000;
00000ec6 : 00000000;
00000ec7 : 00000000;
00000ec8 : 00000000;
00000ec9 : 00000000;
00000eca : 00000000;
00000ecb : 00000000;
00000ecc : 00000000;
00000ecd : 00000000;
00000ece : 00000000;
00000ecf : 00000000;
00000ed0 : 00000000;
00000ed1 : 00000000;
00000ed2 : 00000000;
00000ed3 : 00000000;
00000ed4 : 00000000;
00000ed5 : 00000000;
00000ed6 : 00000000;
00000ed7 : 00000000;
00000ed8 : 00000000;
00000ed9 : 00000000;
00000eda : 00000000;
00000edb : 00000000;
00000edc : 00000000;
00000edd : 00000000;
00000ede : 00000000;
00000edf : 00000000;
00000ee0 : 00000000;
00000ee1 : 00000000;
00000ee2 : 00000000;
00000ee3 : 00000000;
00000ee4 : 00000000;
00000ee5 : 00000000;
00000ee6 : 00000000;
00000ee7 : 00000000;
00000ee8 : 00000000;
00000ee9 : 00000000;
00000eea : 00000000;
00000eeb : 00000000;
00000eec : 00000000;
00000eed : 00000000;
00000eee : 00000000;
00000eef : 00000000;
00000ef0 : 00000000;
00000ef1 : 00000000;
00000ef2 : 00000000;
00000ef3 : 00000000;
00000ef4 : 00000000;
00000ef5 : 00000000;
00000ef6 : 00000000;
00000ef7 : 00000000;
00000ef8 : 00000000;
00000ef9 : 00000000;
00000efa : 00000000;
00000efb : 00000000;
00000efc : 00000000;
00000efd : 00000000;
00000efe : 00000000;
00000eff : 00000000;
00000f00 : 00000000;
00000f01 : 00000000;
00000f02 : 00000000;
00000f03 : 00000000;
00000f04 : 00000000;
00000f05 : 00000000;
00000f06 : 00000000;
00000f07 : 00000000;
00000f08 : 00000000;
00000f09 : 00000000;
00000f0a : 00000000;
00000f0b : 00000000;
00000f0c : 00000000;
00000f0d : 00000000;
00000f0e : 00000000;
00000f0f : 00000000;
00000f10 : 00000000;
00000f11 : 00000000;
00000f12 : 00000000;
00000f13 : 00000000;
00000f14 : 00000000;
00000f15 : 00000000;
00000f16 : 00000000;
00000f17 : 00000000;
00000f18 : 00000000;
00000f19 : 00000000;
00000f1a : 00000000;
00000f1b : 00000000;
00000f1c : 00000000;
00000f1d : 00000000;
00000f1e : 00000000;
00000f1f : 00000000;
00000f20 : 00000000;
00000f21 : 00000000;
00000f22 : 00000000;
00000f23 : 00000000;
00000f24 : 00000000;
00000f25 : 00000000;
00000f26 : 00000000;
00000f27 : 00000000;
00000f28 : 00000000;
00000f29 : 00000000;
00000f2a : 00000000;
00000f2b : 00000000;
00000f2c : 00000000;
00000f2d : 00000000;
00000f2e : 00000000;
00000f2f : 00000000;
00000f30 : 00000000;
00000f31 : 00000000;
00000f32 : 00000000;
00000f33 : 00000000;
00000f34 : 00000000;
00000f35 : 00000000;
00000f36 : 00000000;
00000f37 : 00000000;
00000f38 : 00000000;
00000f39 : 00000000;
00000f3a : 00000000;
00000f3b : 00000000;
00000f3c : 00000000;
00000f3d : 00000000;
00000f3e : 00000000;
00000f3f : 00000000;
00000f40 : 00000000;
00000f41 : 00000000;
00000f42 : 00000000;
00000f43 : 00000000;
00000f44 : 00000000;
00000f45 : 00000000;
00000f46 : 00000000;
00000f47 : 00000000;

END;
