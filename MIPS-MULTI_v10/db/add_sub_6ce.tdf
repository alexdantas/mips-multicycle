--lpm_add_sub CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone II" LPM_PIPELINE=1 LPM_WIDTH=9 aclr(gnd) cin clken(vcc) clock dataa datab result
--VERSION_BEGIN 9.1SP2 cbx_cycloneii 2010:03:24:20:43:43:SJ cbx_lpm_add_sub 2010:03:24:20:43:43:SJ cbx_mgl 2010:03:24:21:01:05:SJ cbx_stratix 2010:03:24:20:43:43:SJ cbx_stratixii 2010:03:24:20:43:43:SJ  VERSION_END


-- Copyright (C) 1991-2010 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 9 
SUBDESIGN add_sub_6ce
( 
	aclr	:	input;
	cin	:	input;
	clken	:	input;
	clock	:	input;
	dataa[8..0]	:	input;
	datab[8..0]	:	input;
	result[8..0]	:	output;
) 
VARIABLE
	pipeline_dffe[8..0]	:	DFFE
		WITH (
			power_up ="low"
		);
	result_int[9..0]	:	WIRE;
	const_used_aclr	:	WIRE;
	const_used_clken	:	WIRE;
BEGIN 
	result_int[] = (dataa[], cin) + (datab[], cin);
	pipeline_dffe[].clk = clock;
	result[] = pipeline_dffe[8..0].q;
	pipeline_dffe[8..0].d = result_int[9..1];
	const_used_aclr = aclr;
	const_used_clken = clken;
END;
--VALID FILE
